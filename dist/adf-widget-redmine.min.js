!function(e,t){"use strict";function n(e){return{templateUrl:e?"{widgetsPath}/redmine/src/main/issues/edit/easyedit.html":"{widgetsPath}/redmine/src/main/issues/edit/edit.html",controller:e?"easyEditIssuesController":"editIssuesController",controllerAs:"vm",resolve:{projects:["redmineService","easyRedmineService",function(t,n){return e?n.getProjects():t.getProjects()}],customQueries:["redmineService","easyRedmineService",function(t,n){return e?n.getCustomQueries().then(function(e){return e.easy_queries}):t.getCustomQueries().then(function(e){return e.queries})}]}}}function i(e){return{templateUrl:"{widgetsPath}/redmine/src/main/chart/edit/edit.html",controller:e?"easyEditChartController":"editChartController",controllerAs:"vm",resolve:{projects:["redmineService","easyRedmineService",function(t,n){return e?n.getProjects():t.getProjects()}]}}}function s(e,t,i,s,o){e.widget(t,{title:i,description:"Displays issues from a custom query",category:s,templateUrl:"{widgetsPath}/redmine/src/main/issues/view.html",controller:o?"easyIssueController":"issueController",controllerAs:"vm",resolve:{issues:["redmineService","easyRedmineService","config",function(e,t,n){if(n.customQuery)return o?t.getIssuesByQueryId(n.customQuery.id,n.project.id):e.getIssuesByQueryId(n.customQuery.id,n.customQuery.project_id)}]},edit:n(o)})}function o(e,t,n,i,s){e.widget(t,{title:n,description:"Displays all issues assigned to me",category:i,templateUrl:"{widgetsPath}/redmine/src/main/issues/view.html",controller:s?"easyIssueController":"issueController",controllerAs:"vm",resolve:{issues:["redmineService","easyRedmineService",function(e,t){return s?t.getMyIssues():e.getMyIssues()}]}})}function r(e,t,n,s,o){e.widget(t,{title:n,description:"Displays a burnup or burndown chart",category:s,templateUrl:"{widgetsPath}/redmine/src/main/chart/view.html",controller:o?"easyChartController":"chartController",controllerAs:"vm",resolve:{chartData:["chartDataService","easyChartDataService","config",function(e,t,n){if(n.project)if(o)try{return t.getChartData(n)}catch(i){return n.failState="EasyRedmine failed to deliver the requested issues on time",null}else try{return e.getChartData(n)}catch(i){return n.failState="Redmine failed to deliver the requested issues on time",null}}]},edit:i(o)})}function a(e,t,n,i){e.possibleColumns={id:{name:"ID",show:!0},tracker:{name:"Tracker",show:!0},status:{name:"Status",show:!0},subject:{name:"Subject",show:!0},assignee:{name:"Assignee",show:!0},priority:{name:"Priority",show:!0}},angular.equals({},i)&&(i.columns=e.possibleColumns,i.customQuery="",i.project="",i.assigned_to_id="me",i.showClosed=!1),e.projects=t,e.customQueries=n}function c(e,t,n,i,s){function o(t){"version"===t?e.config.filterWithVersion=!0:"assigned"===t?e.config.filterWithAssigned=!0:"tracker"===t&&(e.config.filterWithTracker=!0),e.filterToAdd="none"}function r(){e.config.timespan.fromDateTime&&(e.config.timespan.fromDateTime=new Date(e.config.timespan.fromDateTime),e.config.timespan.toDateTime=new Date(e.config.timespan.toDateTime))}function a(){e.inlineOptions.minDate=e.inlineOptions.minDate?null:new Date,e.dateOptions.minDate=e.inlineOptions.minDate}function c(){if(e.config.project){if("All"===e.config.project)return void(e.versions=[]);s.getVersions(angular.fromJson(e.config.project).identifier).then(function(t){e.versions=t})}}function l(){e.config.filterWithVersion&&e.updateVersions()}function u(){e.config.timespan.toDateTime=new Date(angular.fromJson(e.config.version).due_date);var t=new Date(e.config.timespan.toDateTime);e.config.timespan.fromDateTime=t.setDate(t.getDate()-14)}function d(){s.getTrackers().then(function(t){e.trackers=t})}function m(t){var n=t.date,i=t.mode;if("day"===i)for(var s=new Date(n).setHours(0,0,0,0),o=0;o<e.events.length;o++){var r=new Date(e.events[o].date).setHours(0,0,0,0);if(s===r)return e.events[o].status}return""}e.config=n,e.projects=t,e.addFilter=o,e.converStringsToDateObjects=r,e.toggleMin=a,e.open1=function(){e.popup1.opened=!0},e.open2=function(){e.popup2.opened=!0},e.updateVersions=c,e.checkUpdates=l,e.updateVersionEnd=u,e.updateTracker=d,e.filters=[{id:"version",name:"Fixed Version"},{id:"assigned",name:"Assigned to"},{id:"tracker",name:"Tracker"}],e.config.timespan||(e.config.timespan={}),e.inlineOptions={customClass:m,minDate:new Date,showWeeks:!0},e.dateOptions||(e.dateOptions={formatYear:"yy",startingDay:1}),e.formats=["yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[0],e.altInputFormats=["M!/d!/yyyy"],e.popup1={opened:!1},e.popup2={opened:!1},e.toggleMin(),e.converStringsToDateObjects()}function l(){d.apply(this,arguments)}function u(){d.apply(this,arguments)}function d(e,t,n,i){this.http=e,this.apiEndpoint=t,this.apiEndpointRedirect=n,this.q=i}function m(e,t,n,i){n&&(e.config=n),n.columns||(e.config={columns:{id:{name:"ID",show:!0},tracker:{name:"Tracker",show:!0},status:{name:"Status",show:!0},subject:{name:"Subject",show:!0},assignee:{name:"Assignee",show:!1},priority:{name:"Priority",show:!0}},assigned_to_id:"me"}),t&&(e.issues=t,t.issues&&(e.issues=e.issues.issues));var s=i.getRedmineRedirectEndpoint();s||(s=i.getRedmineEndpoint()),e.issueUrl=s+"issues/",e.order="id",e.changeOrder=function(t){e.order=t,e.reverse=!e.reverse}}function p(e,t){function n(e,t,n){for(var i=0;i<e.length;i++){var s=new Date(e[i].created_on);s.getTime()<=n.getTime()&&(t.push(e[i]),e.splice(i,1),i--)}}function i(e,t){for(var n=0;n<e.length;n++)if(e[n].closed_on){var i=new Date(e[n].closed_on);i.getTime()<=t.getTime()&&(e.splice(n,1),n--)}}function s(e,t,s,o){for(var r=Math.abs(e.getTime()-t.getTime()),a=r/o.numberPoints,c=s.length,l=c/r,u=[],d=[],m=[];e.getTime()<=t.getTime();){n(s,d,e),i(d,e);var p={x:e.toISOString(),y:d.length};if(m.push(p),o.showIdeal){var g=Math.round(100*(c-u.length*l*a))/100,f={x:e.toISOString(),y:g};u.push(f)}e.setTime(e.getTime()+a)}var h=[m];return o.showIdeal&&h.push(u),h}function o(e){return t.getIssuesForChart(e).then(function(t){e.numberPoints=50;var n=new Date(e.timespan.fromDateTime),i=new Date(e.timespan.toDateTime);return s(n,i,t,e)})}return{getChartData:o}}function g(e,t,n){e.config=n;var i={scales:{yAxes:[{id:"y-axis-1",display:!0,position:"left",scaleLabel:{display:!0,labelString:"Open Issues"}}],xAxes:[{id:"x-axis-1",type:"time",time:{displayFormats:{day:"D.MMM",week:"D.MMM",month:"MMM/YY",quarter:"[Q]Q - YYYY",year:"YYYY"}}}]},legend:{display:!0,position:"bottom"},responsive:!0};e.chart={data:t,series:[],"class":"chart-line",options:i},e.config.project&&"All"!==e.config.project?e.chart.series.push(angular.fromJson(e.config.project).name):e.chart.series.push("All Projects"),e.config.showIdeal&&e.chart.series.push("Ideal")}angular.module("adf.widget.redmine",["adf.provider","chart.js","ui.bootstrap.datepicker"]).constant("redmineEndpoint","http://192.168.56.2/redmine/").constant("redmineRedirectEndpoint",null).config(["dashboardProvider",function(e){var t="Redmine";o(e,"redmine-my-issues","My Issues",t,!1),s(e,"redmine-custom-queries","Custom Queries",t,!1),r(e,"redmine-chart","Chart",t,!1)}]),angular.module("adf.widget.easyredmine",["adf.provider","chart.js","ui.bootstrap.datepicker"]).constant("easyRedmineEndpoint","http://192.168.56.2/easyredmine/").constant("easyRedmineRedirectEndpoint",null).config(["dashboardProvider",function(e){var t="EasyRedmine";o(e,"easyredmine-my-issues","My Issues",t,!0),s(e,"easyredmine-custom-queries","Custom Queries",t,!0),r(e,"easyredmine-chart","Chart",t,!0)}]),angular.module("adf.widget.easyredmine").run(["$templateCache",function(e){e.put("{widgetsPath}/redmine/src/main/chart/view.html",'<div class="alert alert-info" ng-if=vm.config.failState>Please reload the widget. Reason: {{vm.config.failState}}</div><div class="alert alert-info" ng-if="!vm.config.project && !vm.config.failState">Please configure the widget</div><div ng-if="vm.chart && vm.config.project && !vm.config.failState"><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div>'),e.put("{widgetsPath}/redmine/src/main/issues/view.html",'<style type=text/css>\n  td>a{\n    font-weight: bold;\n    padding: 2px;\n    color: white;\n    border-radius: 2px 6px 6px 2px;\n    background-color: #409ae3;\n  }\n  td>a:hover{\n    color: white;\n    background-color: #4183c4;\n  }\n  th{\n    cursor: pointer;\n  }\n  .x-scrollable {\n    width: 100%;\n    max-height: 800px;\n    overflow-x: auto;\n  }\n\n\n</style><div class="alert alert-info" ng-if=!vm.issues>Please configure the widget</div><div class="alert alert-info" ng-if="vm.issues && !vm.issues[0].id">No issues found</div><div ng-if="vm.issues && vm.issues[0].id" class=x-scrollable><table class="table table-fixed"><thead><tr><th ng-if=vm.config.columns.id.show ng-click="vm.changeOrder(\'id\')">ID â†“</th><th ng-if=vm.config.columns.tracker.show ng-click="vm.changeOrder(\'tracker.name\')">Tracker</th><th ng-if=vm.config.columns.status.show ng-click="vm.changeOrder(\'status.name\')">Status</th><th ng-if=vm.config.columns.priority.show ng-click="vm.changeOrder(\'priority.name\')">Priority</th><th ng-if=vm.config.columns.subject.show ng-click="vm.changeOrder(\'subject\')">Subject</th><th ng-if=vm.config.columns.assignee.show ng-click="vm.changeOrder(\'assignee.name\')">Assignee</th></tr></thead><tr ng-repeat="issue in vm.issues | orderBy: vm.order : vm.reverse"><td ng-if=vm.config.columns.id.show title="\'ID\'"><a href={{vm.issueUrl}}{{issue.id}}>#{{issue.id}}</a></td><td ng-if=vm.config.columns.tracker.show title="\'Tracker\'">{{issue.tracker.name}}</td><td ng-if=vm.config.columns.status.show title="\'Status\'">{{issue.status.name}}</td><td ng-if=vm.config.columns.priority.show title="\'Priority\'">{{issue.priority.name}}</td><td ng-if=vm.config.columns.subject.show title="\'Subject\'">{{issue.subject}}</td><td ng-if=vm.config.columns.assignee.show title="\'Assignee\'">{{issue.assigned_to.name}}</td></tr></table></div>'),e.put("{widgetsPath}/redmine/src/main/chart/edit/edit.html",'<form role=form><div class=form-group><label for=project>Project</label><select name=project id=project class=form-control ng-model=vm.config.project ng-change=vm.checkUpdates() ng-required=true><option value=All>All</option><option ng-repeat="project in vm.projects | orderBy: \'name\'" value={{project}}>{{project.name}}</option></select></div><p class=input-group><label for=Filter>Add Filter</label><select name=filter id=filter class=form-control ng-model=vm.filterToAdd ng-change=vm.addFilter(vm.filterToAdd)><option ng-repeat="filter in vm.filters | orderBy: \'name\'" value={{filter.id}}>{{filter.name}}</option></select></p><div ng-if=vm.config.filterWithVersion><label for=version>Fixed Version</label><p class=input-group ng-init=vm.updateVersions()><select name=version id=version class=form-control ng-model=vm.config.version ng-change=vm.updateVersionEnd()><option ng-repeat="version in vm.versions | orderBy: \'name\'" value={{version}}>{{version.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithVersion=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></p></div><div ng-if=vm.config.filterWithAssigned><label for=assgined_to_id>Assigned To</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="Get issues which are assigned to the given user ID. <me> can be used instead an ID to fetch all issues from the logged in user. Leave empty if you want to see all issues."></span><div class=input-group><input name=assigned_to_id id=assgined_to_id class=form-control ng-model=config.assigned_to_id> <span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithAssigned=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div></div><div ng-if=vm.config.filterWithTracker><label for=tacker>Tracker</label><div class=input-group ng-init=vm.updateTracker()><select name=tracker id=tracker class=form-control ng-model=vm.config.tracker><option ng-repeat="tracker in vm.trackers | orderBy: \'name\'" value={{tracker}}>{{tracker.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithTracker=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div></div><div class=form-group><input type=checkbox name=showIdeal ng-model=config.showIdeal> Show ideal line</div><div><label for=period>Period</label><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup1.opened ng-model=vm.config.timespan.fromDateTime placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup2.opened ng-model=vm.config.timespan.toDateTime placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/redmine/src/main/issues/edit/easyedit.html",'<form role=form><div class=form-group><label>Project</label><select name=project ng-options="project as project.name for project in vm.projects track by project.name" required class=form-control ng-model=config.project><option disabled>Select your project</option></select></div><div class=form-group ng-if=config.project><label>My Custom-Queries</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="EasyRedmine only supports custom queries that are not restricted to a specific project. This can be achieved in the configuration for a custom query by enabling \'for all projects\' instead of a specific project."></span><select name=customQuery ng-options="customQuery as customQuery.name for customQuery in vm.customQueries track by customQuery.name" required class=form-control ng-model=config.customQuery><option disabled>Select your query</option></select></div><div class=form-group><input type=checkbox name=showClosed ng-model=config.showClosed> Show closed issues</div><div class=form-group><label>Columns to show</label><li class=list-group-item ng-repeat="(key, entry) in vm.possibleColumns"><input type=checkbox name={{key}} ng-model=config.columns[key].show> {{entry.name}}</li></div></form>'),e.put("{widgetsPath}/redmine/src/main/issues/edit/edit.html",'<form role=form><div class=form-group><label>My Custom-Queries</label><select name=customQuery ng-options="customQuery as customQuery.name for customQuery in vm.customQueries track by customQuery.name" required class=form-control ng-model=config.customQuery><option disabled>Select your query</option></select></div><div class=form-group><input type=checkbox name=showClosed ng-model=config.showClosed> Show closed issues</div><div class=form-group><label>Columns to show</label><li class=list-group-item ng-repeat="(key, entry) in vm.possibleColumns"><input type=checkbox name={{key}} ng-model=config.columns[key].show> {{entry.name}}</li></div></form>')}]),angular.module("adf.widget.redmine").run(["$templateCache",function(e){e.put("{widgetsPath}/redmine/src/main/chart/view.html",'<div class="alert alert-info" ng-if=vm.config.failState>Please reload the widget. Reason: {{vm.config.failState}}</div><div class="alert alert-info" ng-if="!vm.config.project && !vm.config.failState">Please configure the widget</div><div ng-if="vm.chart && vm.config.project && !vm.config.failState"><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div>'),e.put("{widgetsPath}/redmine/src/main/issues/view.html",'<style type=text/css>\n  td>a{\n    font-weight: bold;\n    padding: 2px;\n    color: white;\n    border-radius: 2px 6px 6px 2px;\n    background-color: #409ae3;\n  }\n  td>a:hover{\n    color: white;\n    background-color: #4183c4;\n  }\n  th{\n    cursor: pointer;\n  }\n  .x-scrollable {\n    width: 100%;\n    max-height: 800px;\n    overflow-x: auto;\n  }\n\n\n</style><div class="alert alert-info" ng-if=!vm.issues>Please configure the widget</div><div class="alert alert-info" ng-if="vm.issues && !vm.issues[0].id">No issues found</div><div ng-if="vm.issues && vm.issues[0].id" class=x-scrollable><table class="table table-fixed"><thead><tr><th ng-if=vm.config.columns.id.show ng-click="vm.changeOrder(\'id\')">ID â†“</th><th ng-if=vm.config.columns.tracker.show ng-click="vm.changeOrder(\'tracker.name\')">Tracker</th><th ng-if=vm.config.columns.status.show ng-click="vm.changeOrder(\'status.name\')">Status</th><th ng-if=vm.config.columns.priority.show ng-click="vm.changeOrder(\'priority.name\')">Priority</th><th ng-if=vm.config.columns.subject.show ng-click="vm.changeOrder(\'subject\')">Subject</th><th ng-if=vm.config.columns.assignee.show ng-click="vm.changeOrder(\'assignee.name\')">Assignee</th></tr></thead><tr ng-repeat="issue in vm.issues | orderBy: vm.order : vm.reverse"><td ng-if=vm.config.columns.id.show title="\'ID\'"><a href={{vm.issueUrl}}{{issue.id}}>#{{issue.id}}</a></td><td ng-if=vm.config.columns.tracker.show title="\'Tracker\'">{{issue.tracker.name}}</td><td ng-if=vm.config.columns.status.show title="\'Status\'">{{issue.status.name}}</td><td ng-if=vm.config.columns.priority.show title="\'Priority\'">{{issue.priority.name}}</td><td ng-if=vm.config.columns.subject.show title="\'Subject\'">{{issue.subject}}</td><td ng-if=vm.config.columns.assignee.show title="\'Assignee\'">{{issue.assigned_to.name}}</td></tr></table></div>'),e.put("{widgetsPath}/redmine/src/main/chart/edit/edit.html",'<form role=form><div class=form-group><label for=project>Project</label><select name=project id=project class=form-control ng-model=vm.config.project ng-change=vm.checkUpdates() ng-required=true><option value=All>All</option><option ng-repeat="project in vm.projects | orderBy: \'name\'" value={{project}}>{{project.name}}</option></select></div><p class=input-group><label for=Filter>Add Filter</label><select name=filter id=filter class=form-control ng-model=vm.filterToAdd ng-change=vm.addFilter(vm.filterToAdd)><option ng-repeat="filter in vm.filters | orderBy: \'name\'" value={{filter.id}}>{{filter.name}}</option></select></p><div ng-if=vm.config.filterWithVersion><label for=version>Fixed Version</label><p class=input-group ng-init=vm.updateVersions()><select name=version id=version class=form-control ng-model=vm.config.version ng-change=vm.updateVersionEnd()><option ng-repeat="version in vm.versions | orderBy: \'name\'" value={{version}}>{{version.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithVersion=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></p></div><div ng-if=vm.config.filterWithAssigned><label for=assgined_to_id>Assigned To</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="Get issues which are assigned to the given user ID. <me> can be used instead an ID to fetch all issues from the logged in user. Leave empty if you want to see all issues."></span><div class=input-group><input name=assigned_to_id id=assgined_to_id class=form-control ng-model=config.assigned_to_id> <span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithAssigned=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div></div><div ng-if=vm.config.filterWithTracker><label for=tacker>Tracker</label><div class=input-group ng-init=vm.updateTracker()><select name=tracker id=tracker class=form-control ng-model=vm.config.tracker><option ng-repeat="tracker in vm.trackers | orderBy: \'name\'" value={{tracker}}>{{tracker.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithTracker=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div></div><div class=form-group><input type=checkbox name=showIdeal ng-model=config.showIdeal> Show ideal line</div><div><label for=period>Period</label><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup1.opened ng-model=vm.config.timespan.fromDateTime placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup2.opened ng-model=vm.config.timespan.toDateTime placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/redmine/src/main/issues/edit/easyedit.html",'<form role=form><div class=form-group><label>Project</label><select name=project ng-options="project as project.name for project in vm.projects track by project.name" required class=form-control ng-model=config.project><option disabled>Select your project</option></select></div><div class=form-group ng-if=config.project><label>My Custom-Queries</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="EasyRedmine only supports custom queries that are not restricted to a specific project. This can be achieved in the configuration for a custom query by enabling \'for all projects\' instead of a specific project."></span><select name=customQuery ng-options="customQuery as customQuery.name for customQuery in vm.customQueries track by customQuery.name" required class=form-control ng-model=config.customQuery><option disabled>Select your query</option></select></div><div class=form-group><input type=checkbox name=showClosed ng-model=config.showClosed> Show closed issues</div><div class=form-group><label>Columns to show</label><li class=list-group-item ng-repeat="(key, entry) in vm.possibleColumns"><input type=checkbox name={{key}} ng-model=config.columns[key].show> {{entry.name}}</li></div></form>'),e.put("{widgetsPath}/redmine/src/main/issues/edit/edit.html",'<form role=form><div class=form-group><label>My Custom-Queries</label><select name=customQuery ng-options="customQuery as customQuery.name for customQuery in vm.customQueries track by customQuery.name" required class=form-control ng-model=config.customQuery><option disabled>Select your query</option></select></div><div class=form-group><input type=checkbox name=showClosed ng-model=config.showClosed> Show closed issues</div><div class=form-group><label>Columns to show</label><li class=list-group-item ng-repeat="(key, entry) in vm.possibleColumns"><input type=checkbox name={{key}} ng-model=config.columns[key].show> {{entry.name}}</li></div></form>')}]),angular.module("adf.widget.redmine").controller("editIssuesController",["projects","customQueries","config",function(e,t,n){return a(this,e,t,n)}]),angular.module("adf.widget.easyredmine").controller("easyEditIssuesController",["projects","customQueries","config",function(e,t,n){return a(this,e,t,n)}]),angular.module("adf.widget.redmine").controller("editChartController",["projects","config","chartDataService","redmineService",function(e,t,n,i){return c(this,e,t,n,i)}]),angular.module("adf.widget.easyredmine").controller("easyEditChartController",["projects","config","easyChartDataService","easyRedmineService",function(e,t,n,i){return c(this,e,t,n,i)}]),l.prototype=new d,l.prototype.constructor=l,angular.module("adf.widget.redmine").factory("redmineService",["$http","redmineEndpoint","redmineRedirectEndpoint","$q",function(e,t,n,i){return new l(e,t,n,i)}]),u.prototype=new d,u.prototype.constructor=u,u.prototype.generateParametersForIssuesOpen=function(e){var t=this.generateGeneralIssuesParameters(e);t+="&closed_on=null";var n=new Date(e.timespan.toDateTime);return t+="&created_on=<="+this.dateToYMD(n)},angular.module("adf.widget.easyredmine").factory("easyRedmineService",["$http","easyRedmineEndpoint","easyRedmineRedirectEndpoint","$q",function(e,t,n,i){return new u(e,t,n,i)}]),d.prototype.request=function(e){return this.http.get(this.apiEndpoint+e).then(function(e){return e.data})},d.prototype.getProjects=function(){return this.request("projects.json").then(function(e){return e.projects})},d.prototype.getVersions=function(e){return this.request("projects/"+e+"/versions.json").then(function(e){return e.versions})},d.prototype.getIssues=function(e){var t=this.generateGeneralIssuesParameters(e),n=e.limit?e.limit:Number.MAX_SAFE_INTEGER;return this.getIssuesWithParamsAndLimit(t,n)},d.prototype.getIssuesForChart=function(e){var t=[],n=e.limit?e.limit:Number.MAX_SAFE_INTEGER,i=this.generateParametersForIssuesOpenOnEnd(e),s=this.generateParametersForIssuesClosedBetweenStartAndEnd(e),o=this.generateParametersForIssuesOpen(e);return this.q.all([this.getIssuesWithParamsAndLimit(i,n),this.getIssuesWithParamsAndLimit(s,n),this.getIssuesWithParamsAndLimit(o,n)]).then(function(e){return angular.forEach(e,function(e){angular.forEach(e,function(e){t.push(e)})}),t})},d.prototype.getIssuesWithParamsAndLimit=function(e,t){var n=[];return this.collectPageIssues(e,0).then(function(i){angular.forEach(i.issues,function(e){n.push(e)});for(var s=[],o=100;o<i.total_count&&o<t;o+=100)s.push(this.collectPageIssues(e,o));return e.length>0?this.q.all(s).then(function(e){return angular.forEach(e,function(e){angular.forEach(e.issues,function(e){n.push(e)})}),n}):n}.bind(this))},d.prototype.collectPageIssues=function(e,t){return this.request("issues.json"+e+"&offset="+t).then(function(e){return e})},d.prototype.generateParametersForIssuesOpenOnEnd=function(e){var t=this.generateGeneralIssuesParameters(e);t+="&status_id=*";var n=new Date(e.timespan.toDateTime);return t+="&created_on=<="+this.dateToYMD(n),t+="&closed_on=>="+this.dateToYMD(n)},d.prototype.generateParametersForIssuesOpen=function(e){var t=this.generateGeneralIssuesParameters(e);t+="&status_id=open";var n=new Date(e.timespan.toDateTime);return t+="&created_on=<="+this.dateToYMD(n)},d.prototype.generateParametersForIssuesClosedBetweenStartAndEnd=function(e){var t=this.generateGeneralIssuesParameters(e);t+="&status_id=*";var n=new Date(e.timespan.fromDateTime),i=new Date(e.timespan.toDateTime);return t+="&closed_on=><"+this.dateToYMD(n)+"|"+this.dateToYMD(i)},d.prototype.generateGeneralIssuesParameters=function(e){var t="?limit=100&sort=created_on";return e.project&&"All"!==e.project&&(t+="&project_id="+angular.fromJson(e.project).id),e.filterWithAssigned&&e.assigned_to_id&&(t+="&assigned_to_id="+e.assigned_to_id),e.showClosed&&(t+="&status_id=*"),e.filterWithVersion&&e.version&&(t+="&fixed_version_id="+angular.fromJson(e.version).id),e.filterWithTracker&&e.tracker&&(t+="&tracker_id="+angular.fromJson(e.tracker).id),t},d.prototype.dateToYMD=function(e){var t=e.getDate(),n=e.getMonth()+1,i=e.getFullYear();return""+i+"-"+(n<=9?"0"+n:n)+"-"+(t<=9?"0"+t:t)},d.prototype.getCustomQueries=function(){return this.request("queries.json?limit=100")},d.prototype.getIssuesByQueryId=function(e,t){return this.request("issues.json?query_id="+e+"&project_id="+t).then(function(e){return e.issues})},d.prototype.getRedmineEndpoint=function(){return this.apiEndpoint},d.prototype.getRedmineRedirectEndpoint=function(){return this.apiEndpointRedirect},d.prototype.getTrackers=function(){return this.request("trackers.json").then(function(e){return e.trackers})},d.prototype.getMyIssues=function(){return this.request("issues.json?assigned_to_id=me").then(function(e){return e})},angular.module("adf.widget.redmine").controller("issueController",["issues","config","redmineService",function(e,t,n){return m(this,e,t,n)}]),angular.module("adf.widget.easyredmine").controller("easyIssueController",["issues","config","easyRedmineService",function(e,t,n){return m(this,e,t,n)}]),angular.module("adf.widget.redmine").factory("chartDataService",["$q","redmineService",function(e,t){return p(e,t)}]),angular.module("adf.widget.easyredmine").factory("easyChartDataService",["$q","easyRedmineService",function(e,t){return p(e,t)}]),angular.module("adf.widget.redmine").controller("chartController",["chartData","config",function(e,t){return g(this,e,t)}]),angular.module("adf.widget.easyredmine").controller("easyChartController",["chartData","config",function(e,t){return g(this,e,t)}])}(window);